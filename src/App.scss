@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300&display=swap');

$backgroundColor: rgb(255 255 255 / .1);
$textColor: rgb(255 255 255 / .6);

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  background: linear-gradient(45deg, rgba(0,34,68,1) 0%, rgba(102,0,0,1) 100%);
  font-family: 'Ubuntu', sans-serif;
  overflow: hidden;
}

.App {
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.header {
  position: absolute;
  top: 0;
  width: 100%;
  height: 70px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;

  label {
    color: rgb(255 255 255 / .8);
    margin-right: 5px;
  }

  input {
    background-color: $backgroundColor;
    padding: 10px;
    border: 0;
    outline: none;
    color: $textColor;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
    }
    &[type=number] {
      -moz-appearance: textfield;
    }
  }

  .warn {
    position: absolute;
    bottom: 0;
    transform: translateY(100%);
    width: 300px;
    text-align: center;

    &.yellow {
      color: #ffd600;
    }
    &.red {
      color: #d32f2f;
    }
  }
}

.carousel {
  position: relative;
  width: calc(350px * var(--cards-per-view) + 20px * (var(--cards-per-view) - 1));
  height: 100%;
  transition: .5s ease;
}

.card_container {
  position: absolute;
  width: calc(100% / var(--cards-per-view) - 20px + 20px / var(--cards-per-view));
  height: 100%;
  display: flex;
  user-select: none;
  opacity: var(--active);
  transform: translateX(calc(var(--offset) * (100% + 20px)));
  transition: .5s ease;
}

.card {
  margin: auto;
  padding: 20px 30px;
  color: $textColor;
  background-color: $backgroundColor;
  box-shadow: 4px 4px 10px rgb(0 0 0 / .6);

  p {
    margin-top: 10px;
    font-size: 20px;
  }
}

.nav {
  position: absolute;
  top: 50%;
  display: flex;
  background: transparent;
  border: 0;
  font-size: 50px;
  color: $textColor;
  translate: 0 -50%;
  cursor: pointer;
  z-index: 100;

  &.left {
    transform: translateX(-150%);
  }
  &.right {
    right: 0;
    transform: translateX(150%);
  }
}